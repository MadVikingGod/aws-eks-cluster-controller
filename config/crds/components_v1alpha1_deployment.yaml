apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: deployments.components.eks.amazonaws.com
spec:
  group: components.eks.amazonaws.com
  names:
    kind: Deployment
    plural: deployments
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            cluster:
              type: string
            minReadySeconds:
              description: Minimum number of seconds for which a newly created pod
                should be ready without any of its container crashing, for it to be
                considered available. Defaults to 0 (pod will be considered available
                as soon as it is ready)
              format: int32
              type: integer
            name:
              type: string
            namespace:
              type: string
            paused:
              description: Indicates that the deployment is paused.
              type: boolean
            progressDeadlineSeconds:
              description: The maximum time in seconds for a deployment to make progress
                before it is considered to be failed. The deployment controller will
                continue to process failed deployments and a condition with a ProgressDeadlineExceeded
                reason will be surfaced in the deployment status. Note that progress
                will not be estimated during the time a deployment is paused. Defaults
                to 600s.
              format: int32
              type: integer
            replicas:
              description: Number of desired pods. This is a pointer to distinguish
                between explicit zero and not specified. Defaults to 1.
              format: int32
              type: integer
            revisionHistoryLimit:
              description: The number of old ReplicaSets to retain to allow rollback.
                This is a pointer to distinguish between explicit zero and not specified.
                Defaults to 10.
              format: int32
              type: integer
            selector:
              description: Label selector for pods. Existing ReplicaSets whose pods
                are selected by this will be the ones affected by this deployment.
                It must match the pod template's labels.
              type: object
            strategy:
              description: The deployment strategy to use to replace existing pods
                with new ones.
              type: object
            template:
              description: Template describes the pods that will be created.
              type: object
          required:
          - selector
          - template
          - cluster
          - name
          - namespace
          type: object
        status:
          properties:
            availableReplicas:
              description: Total number of available pods (ready for at least minReadySeconds)
                targeted by this deployment.
              format: int32
              type: integer
            collisionCount:
              description: Count of hash collisions for the Deployment. The Deployment
                controller uses this field as a collision avoidance mechanism when
                it needs to create the name for the newest ReplicaSet.
              format: int32
              type: integer
            conditions:
              description: Represents the latest available observations of a deployment's
                current state. +patchMergeKey=type +patchStrategy=merge
              items:
                type: object
              type: array
            observedGeneration:
              description: The generation observed by the deployment controller.
              format: int64
              type: integer
            readyReplicas:
              description: Total number of ready pods targeted by this deployment.
              format: int32
              type: integer
            replicas:
              description: Total number of non-terminated pods targeted by this deployment
                (their labels match the selector).
              format: int32
              type: integer
            status:
              type: string
            unavailableReplicas:
              description: Total number of unavailable pods targeted by this deployment.
                This is the total number of pods that are still required for the deployment
                to have 100% available capacity. They may either be pods that are
                running but not yet available or pods that still have not been created.
              format: int32
              type: integer
            updatedReplicas:
              description: Total number of non-terminated pods targeted by this deployment
                that have the desired template spec.
              format: int32
              type: integer
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
